{"version":3,"sources":["layout/Header.jsx","layout/Footer.jsx","Components/Preloader.jsx","Components/Card.jsx","Components/Cards.jsx","Components/pagination.jsx","Components/Search.jsx","layout/Main.jsx","App.js","index.js"],"names":["Header","className","href","alt","Footer","Date","getFullYear","Preloader","Card","props","title","Title","year","Year","id","imdbID","type","Type","poster","Poster","onClick","e","searchAbout","src","actors","prevactors","country","genre","runtime","ratings","plot","Cards","movies","length","map","movie","Pagination","result","currentPage","page","pagesCount","Math","ceil","pagesCountArray","i","push","numberPortionPaginator","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","pages","data-value","handlePageNumber","Search","searchMovies","Function","prototype","search","setSearch","setType","setPage","handleFilterType","target","dataset","placeholder","value","onChange","onKeyDown","key","htmlFor","name","data-type","checked","Number","API_KEY","process","Main","setMovies","setResult","loading","setLoading","setRuntime","setGenre","setActors","setPlot","setCountry","setRatings","changedID","setChangedID","setPrevactors","useEffect","fetch","then","response","json","data","totalResults","catch","err","console","log","str","cleanCardImage","document","querySelectorAll","cleanCardReveal","style","overflow","display","Runtime","Genre","Actors","Plot","Country","imdbRating","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c90906cd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return <nav className='#7e57c2 deep-purple lighten-1'>\r\n        <div className=\"nav-wrapper\">\r\n            <a href=\"#!\" className=\"brand-logo\"><i className=\"material-icons\"> </i>Find Movie</a>\r\n            <ul className=\"right hide-on-med-and-down\">\r\n                <li><a href=\"https://github.com/AstakhovV\"><i className=\"material-icons\" alt='https://github.com/AstakhovV'>person</i></a></li>\r\n                GitHub\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n}\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"#f3e5f5 purple lighten-4\">\r\n            <div className=\"footer-copyright\">\r\n                <div className=\"container\">\r\n                    Â© {new Date().getFullYear()} Copyright Text\r\n                    <a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/AstakhovV\">AstakhovV</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","import React from 'react'\r\n\r\nexport function Preloader() {\r\nreturn (\r\n    <div className=\"progress\">\r\n        <div className=\"indeterminate\"></div>\r\n    </div>\r\n)\r\n}","import React from 'react'\r\nimport {Preloader} from \"./Preloader\";\r\n\r\nfunction Card(props) {\r\n\r\n    const {\r\n        Title: title,\r\n        Year: year,\r\n        imdbID: id,\r\n        Type: type,\r\n        Poster: poster\r\n    } = props\r\n    return (\r\n        <div id={id} className=\"card movie\">\r\n            <div className=\"card-image waves-effect waves-block waves-light\"\r\n                 onClick={(e) => {props.searchAbout(id)}}>\r\n                {\r\n                    poster === 'N/A' ?\r\n                        <img className=\"activator\"\r\n\r\n                             src={\r\n                            `https://via.placeholder.com/300x425?text=${title}`}/>\r\n                        : <img className=\"activator\" src={poster}/>\r\n\r\n                }\r\n            </div>\r\n            <div className=\"card-content\">\r\n            <span className=\"card-title activator grey-text text-darken-4\">{title}<i\r\n                className=\"material-icons right\"> </i></span>\r\n                <p>{year} <span className='right'>{type}</span></p>\r\n\r\n            </div>\r\n            <div className=\"card-reveal\">\r\n                <span className=\"card-title grey-text text-darken-4\">{title}<i\r\n                    className=\"material-icons right\">close</i>\r\n                </span>\r\n                { (props.actors) ? <div>\r\n                    <p><b>Actors:</b> {props.prevactors}</p>\r\n                    <p><b>Country:</b> {props.country}</p>\r\n                    <p><b>Genre:</b> {props.genre}</p>\r\n                    <p><b>Runtime: </b> {props.runtime} <span className='right'><b>Rating: </b> {props.ratings}</span></p>\r\n                    <hr className=\"hrMargin\"/>\r\n                    <p><i>{props.plot}</i></p>\r\n                </div> :  <Preloader/>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from \"./Card\";\r\n\r\n\r\nfunction Cards(props) {\r\n    const {movies = []} = props\r\n    return (\r\n        <div className='movies'>\r\n            {movies.length ?\r\n                movies.map(movie => (\r\n                    <Card key={movie.imdbID}\r\n                          searchAbout={props.searchAbout}\r\n                          {...movie}\r\n                          runtime={props.runtime}\r\n                          genre={props.genre}\r\n                          plot={props.plot}\r\n                          actors={props.actors}\r\n                          country={props.country}\r\n                          ratings={props.ratings}\r\n                          prevactors={props.prevactors}\r\n                    />\r\n                ))\r\n                : <h4>Nothing was found</h4>\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Cards","import React, {useState} from 'react'\r\n\r\nfunction Pagination(props) {\r\n        let result = props.result\r\n        let currentPage = props.page\r\n        let pagesCount = Math.ceil(result / 10)\r\n        let pagesCountArray =[]\r\n        for (let i=1; i<=pagesCount; i++){\r\n                pagesCountArray.push(i)\r\n        }\r\n        let numberPortionPaginator = Math.ceil(pagesCount / 5)\r\n\r\n        let [portionNumber, setPortionNumber] = useState(1)\r\n        let leftPortionPageNumber = (portionNumber - 1) * 5 + 1;\r\n        let rightPortionPageNumber = portionNumber * 5;\r\n\r\n\r\n        return (\r\n            <ul className=\"pagination paginationRight\">\r\n                    {(portionNumber > 1) ?\r\n                        <li className=\"waves-effect\" onClick={() => {\r\n                                setPortionNumber(portionNumber - 1)\r\n                        }}><><i className=\"material-icons disabled\">\r\n                                chevron_left</i></>\r\n                        </li>\r\n                        : <li className=\"waves-effect\"><><i className=\"material-icons disabled\">\r\n                                chevron_left</i></>\r\n                        </li>\r\n\r\n                    }\r\n                    {pagesCountArray.filter(pages => pages >= leftPortionPageNumber && pages <= rightPortionPageNumber).map(page => {\r\n                            return <li key={page}\r\n                                       className={page === currentPage ?\r\n                                           'active'\r\n                                           : 'waves-effect'}\r\n                                       data-value={page}\r\n                                       onClick={(e) => {\r\n                                               props.handlePageNumber(page)\r\n                                       }}\r\n                            >\r\n                                    <a>{page}</a></li>\r\n                    })}\r\n                    {(numberPortionPaginator <= portionNumber) ?\r\n                        <li className=\"waves-effect\"><><i className=\"material-icons\">\r\n                                chevron_right</i></>\r\n                        </li>\r\n                        : <li className=\"waves-effect\" onClick={() => {\r\n                                setPortionNumber(portionNumber + 1)\r\n                        }}><><i className=\"material-icons\">\r\n                                chevron_right</i></>\r\n                        </li>\r\n                    }\r\n                    {\r\n                            numberPortionPaginator ?\r\n                                <a className=\"btn disabled\">{portionNumber}/{numberPortionPaginator} </a>\r\n                                : <></>\r\n\r\n                    }\r\n            </ul>\r\n\r\n)\r\n}\r\n\r\nexport default Pagination","import React, {useState} from 'react'\r\nimport Pagination from \"./pagination\";\r\n\r\n\r\nexport const Search = (props) => {\r\n\r\n    const {searchMovies = Function.prototype} = props\r\n\r\n    const [search, setSearch] = useState('')\r\n    const [type, setType] = useState('all')\r\n    const [page, setPage] = useState(1)\r\n\r\n    const handleKey = (e) => {\r\n        if (e.key === 'Enter' && search) {\r\n            searchMovies(search, type, page)\r\n        }\r\n    }\r\n\r\n    const handleFilterType = (e) => {\r\n        setType(e.target.dataset.type)\r\n        searchMovies(search, e.target.dataset.type, page)\r\n    }\r\n    const handlePageNumber = (e) => {\r\n        setPage(Number(e))\r\n        searchMovies(search, type, Number(e))\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"input-field\">\r\n                <input id=\"search\"\r\n                       className='validate'\r\n                       placeholder=''\r\n                       type=\"search\"\r\n                       value={search}\r\n                       onChange={(e) => setSearch(e.target.value)}\r\n                       onKeyDown={handleKey}\r\n                />\r\n                <label className='active'\r\n                       htmlFor=\"search \">Search</label>\r\n                {search &&\r\n                <button className='#e1bee7 purple lighten-4 btn search-btn'\r\n                        onClick={() => searchMovies(search, type)}>Search</button>\r\n                }\r\n            </div>\r\n            <div className='controls'>\r\n                <p>\r\n                    <label className='radio'>\r\n                        <input className=\"with-gap\"\r\n                               name=\"all\"\r\n                               type=\"radio\"\r\n                               data-type='all'\r\n                               onChange={handleFilterType}\r\n                               checked={type === 'all'}\r\n                        />\r\n                        <span>All</span>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label className='radio'>\r\n                        <input className=\"with-gap\"\r\n                               name=\"movie\"\r\n                               type=\"radio\"\r\n                               data-type='movie'\r\n                               onChange={handleFilterType}\r\n                               checked={type === 'movie'}\r\n                        />\r\n                        <span>Movies only</span>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label className='radio'>\r\n                        <input className=\"with-gap\"\r\n                               name=\"series\"\r\n                               type=\"radio\"\r\n                               data-type='series'\r\n                               onChange={handleFilterType}\r\n                               checked={type === 'series'}\r\n                        />\r\n                        <span>Series only</span>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <a className=\"btn disabled\"> Result: {props.result}</a>\r\n                </p>\r\n                <Pagination result={props.result}\r\n                            page={page}\r\n                            handlePageNumber={handlePageNumber}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport Cards from \"../Components/Cards\";\r\nimport {Preloader} from \"../Components/Preloader\";\r\nimport {Search} from \"../Components/Search\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY\r\n\r\nfunction Main () {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [result, setResult] = useState(10);\r\n    const [loading, setLoading] = useState(true);\r\n    const [runtime, setRuntime] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n    const [actors, setActors] = useState('');\r\n    const [plot, setPlot] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [ratings, setRatings] = useState('');\r\n    const [changedID, setChangedID] = useState(1);\r\n    const [prevactors, setPrevactors] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=iron man`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setMovies(data.Search);\r\n                setResult(data.totalResults)\r\n                setLoading(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const searchMovies = (str, type = 'all', page) => {\r\n        setLoading(true)\r\n        fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${str !== '' ? `${str}` : 'iron man'}${\r\n            type !== 'all' ? `&type=${type}` : ''}${page !== 1 ? `&page=${page}` : ''}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setMovies(data.Search)\r\n                setResult(data.totalResults)\r\n                setLoading(false)\r\n            })\r\n    }\r\n    const searchAbout = (id) => {\r\n        let cleanCardImage = document.querySelectorAll('.card-image')\r\n        let cleanCardReveal = document.querySelectorAll('.card-reveal')\r\n        if (changedID) {\r\n            for (let i = 0; i < cleanCardImage.length; i++) {\r\n                cleanCardImage[i].style.overflow = \"visible\"\r\n                cleanCardReveal[i].style.display = 'none'\r\n            }\r\n        }\r\n        setActors('');\r\n        fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                    setRuntime(data.Runtime);\r\n                    setGenre(data.Genre);\r\n                    setActors(data.Actors);\r\n                    setPlot(data.Plot);\r\n                    setCountry(data.Country);\r\n                    setRatings(data.imdbRating);\r\n                    setLoading(false);\r\n                    setChangedID(id)\r\n                }\r\n            )\r\n        setPrevactors(actors)\r\n    }\r\n\r\n    return <main className='container content'>\r\n        <Search searchMovies={searchMovies}\r\n                result={result}/>\r\n        {!loading ?\r\n            <Cards movies={movies}\r\n                   actors={actors}\r\n                   runtime={runtime}\r\n                   genre={genre}\r\n                   plot={plot}\r\n                   country={country}\r\n                   ratings={ratings}\r\n                   prevactors={prevactors}\r\n                   searchAbout={searchAbout}\r\n            />\r\n            : <Preloader/>\r\n        }\r\n    </main>\r\n}\r\n\r\nexport {Main}","import React from 'react'\r\nimport Header from \"./layout/Header\";\r\nimport Footer from \"./layout/Footer\";\r\nimport {Main} from \"./layout/Main\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Main/>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}